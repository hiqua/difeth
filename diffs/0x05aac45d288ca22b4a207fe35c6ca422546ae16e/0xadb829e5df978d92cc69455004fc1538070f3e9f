--- 
+++ 
@@ -1,9 +1,9 @@
-/** 
+/**
 * The contract defining the contest, allowing participation and voting.
 * Participation is only possible before the participation deadline.
 * Voting is only allowed after the participation deadline was met and before the voting deadline expires.
 * As soon as voting is over, the contest may be closed, resultig in the distribution od the prizes.
-* The referee may disable certain participants, if their content is inappropiate. 
+* The referee may disable certain participants, if their content is inappropiate.
 *
 * Copyright (c) 2016 Jam Data, Julia Altenried
 * */
@@ -61,21 +61,21 @@
 c4cfee = 1000;
 owner = msg.sender;
 
-deadlineParticipation=1494787620;
-deadlineVoting=1496861220;
-participationFee=5000000000000000;
+deadlineParticipation=1498585200;
+deadlineVoting=1499190000;
+participationFee=7000000000000000;
 votingFee=2000000000000000;
-prizeOwner=200;
+prizeOwner=300;
 prizeReferee=0;
 prizeWinners.push(6045);
-nLuckyVoters=4;
+nLuckyVoters=1;
 
 
 uint16 sumPrizes = prizeOwner;
 for(uint i = 0; i < prizeWinners.length; i++) {
 sumPrizes += prizeWinners[i];
 }
-if(sumPrizes>10000) 
+if(sumPrizes>10000)
 throw;
 else if(sumPrizes < 10000 && nLuckyVoters == 0)//make sure everything is paid out
 throw;
@@ -87,7 +87,7 @@
 function participate() payable {
 if(msg.value < participationFee)
 throw;
-else if (now >= deadlineParticipation) 
+else if (now >= deadlineParticipation)
 throw;
 else if (participated[msg.sender])
 throw;
@@ -98,14 +98,14 @@
 participated[msg.sender]=true;
 //if the winners list is smaller than the prize list, push the candidate
 if(winners.length < prizeWinners.length) winners.push(msg.sender);
-} 
+}
 }
 
 /**
 * adds msg.sender to the voter list and updates vote related mappings if msg.value is enough, the vote is done between the deadlines and the voter didn't vote already
 */
 function vote(address candidate) payable{
-if(msg.value < votingFee) 
+if(msg.value < votingFee)
 throw;
 else if(now < deadlineParticipation || now >=deadlineVoting)
 throw;
@@ -126,7 +126,7 @@
 //else, usually winners[i+1]==candidate, because usually a candidate just improves by one ranking
 //however, if there are multiple candidates with the same amount of votes, it might be otherwise
 for(var j = getCandidatePosition(candidate, i+1); j>i; j--){
-winners[j]=winners[j-1]; 
+winners[j]=winners[j-1];
 }
 winners[i]=candidate;
 break;
