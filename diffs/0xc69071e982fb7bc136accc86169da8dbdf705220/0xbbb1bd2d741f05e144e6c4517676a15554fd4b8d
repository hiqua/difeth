--- 
+++ 
@@ -166,6 +166,10 @@
         _;
     }
 
+    function burn(uint _amount) {
+        controller.burn(msg.sender, _amount);
+        Transfer(msg.sender, 0x0, _amount);
+    }
 }
 
 contract Controller is Owned, Finalizable {
@@ -226,6 +230,11 @@
     onlyToken
     returns (bool success) {
         return ledger.decreaseApproval(_owner, _spender, _subtractedValue);
+    }
+
+
+    function burn(address _owner, uint _amount) onlyToken {
+        ledger.burn(_owner, _amount);
     }
 }
 
@@ -300,16 +309,37 @@
         return true;
     }
 
-    function mint(address _a, uint _amount) onlyOwner notFinalized {
-        balanceOf[_a] = safeAdd(balanceOf[_a], _amount);
-        totalSupply = safeAdd(totalSupply, _amount);
-    }
-
-    function multiMint(uint[] bits) onlyOwner notFinalized {
+    event LogMint(address indexed owner, uint amount);
+    event LogMintingStopped();
+
+    function mint(address _a, uint _amount) onlyOwner mintingActive {
+        balanceOf[_a] += _amount;
+        totalSupply += _amount;
+        LogMint(_a, _amount);
+    }
+
+    function multiMint(uint[] bits) onlyOwner mintingActive {
         for (uint i=0; i<bits.length; i++) {
 	    address a = address(bits[i]>>96);
 	    uint amount = bits[i]&((1<<96) - 1);
 	    mint(a, amount);
         }
     }
+
+    bool public mintingStopped;
+
+    function stopMinting() onlyOwner {
+        mintingStopped = true;
+        LogMintingStopped();
+    }
+
+    modifier mintingActive() {
+        if (mintingStopped) throw;
+        _;
+    }
+
+    function burn(address _owner, uint _amount) onlyController {
+        balanceOf[_owner] = safeSub(balanceOf[_owner], _amount);
+        totalSupply = safeSub(totalSupply, _amount);
+    }
 }