--- 
+++ 
@@ -1,20 +1,33 @@
 pragma solidity ^0.4.0;
-contract MyToken {
-    /* This creates an array with all balances */
-    mapping (address => uint256) public balanceOf;
 
-    /* Initializes contract with initial supply tokens to the creator of the contract */
-    function MyToken(
-        
-        ) {
-        balanceOf[msg.sender] = 210000;              // Give the creator all initial tokens
+contract GBank {
+
+    address creator;
+
+    mapping (address => uint) balances;
+
+    function GBank(uint startAmount) {
+        balances[msg.sender] = startAmount;
+        creator = msg.sender;
     }
 
-    /* Send coins */
-    function transfer(address _to, uint256 _value) {
-        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
-        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
-        balanceOf[msg.sender] -= _value;                     // Subtract from the sender
-        balanceOf[_to] += _value;                            // Add the same to the recipient
+    function getBalance(address a) constant returns (uint) {
+        return balances[a];
+    }
+
+    function transfer(address to, uint amount) {
+
+        // Don't allow sending to self
+        if (msg.sender == to) {
+            throw;
+        }
+
+        // Check if sender has sufficient balance to send
+        if (amount > balances[msg.sender]) {
+            throw;
+        }
+
+        balances[msg.sender] -= amount;
+        balances[to] += amount;
     }
 }